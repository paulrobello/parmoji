name: Reusable Python Setup

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: '3.12'
      architecture:
        required: false
        type: string
        default: 'x64'
    outputs:
      version:
        description: "The version extracted from __init__.py"
        value: ${{ jobs.setup.outputs.version }}

jobs:
  setup:
    name: Setup Python and Extract Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          architecture: ${{ inputs.architecture }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: uv sync
      - name: Get version from __init__.py
        id: get_version
        run: |
          version=$(uv run python -c "from src.parmoji import __version__; print(__version__)")
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "VERSION=$version" >> $GITHUB_ENV
      - name: Validate version
        run: |
          if [ -z "${{ steps.get_version.outputs.version }}" ]; then
            echo "Error: VERSION is empty"; exit 1; fi
          echo "Version: ${{ steps.get_version.outputs.version }}"
